version: '3.9'

services:
  api-db:
    image: postgres:14-alpine
    # restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    expose:
      - 5432
    ports:
      - 5432:5432
    networks:
      - docker_network
    volumes:
      - api-pg-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    expose:
      - 6379
    ports:
      - 6379:6379
    networks:
      - docker_network
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 30

  app-api:
    # restart: always
    depends_on:
      api-db:
        condition: service_healthy
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    networks:
      - docker_network
    volumes:
      - ./app-api:/app-api

volumes:
  api-pg-data:
    external: false

networks:
  docker_network:
    driver: bridge
